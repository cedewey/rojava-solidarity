<?php
/**
 * @file
 * atom_donate functionality
 */

/**
 * Implements hook_block_info().
 */
function atom_donate_block_info() {
  return array(
    'atom_donate' => array(
      'info' => t('Atom Donate'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function atom_donate_block_view($delta = '') {
  $block = array('subject' => '', 'content' => '');
  if ($delta === 'atom_donate') {
    $block['content'] = l(
      t(variable_get('atom_donate_text', 'Donate now')),
      variable_get('atom_donate_path', 'donate'),
      array(
        'attributes' => array(
          'class' => array('donate'),
        ),
      )
    );
  }
  return $block;
}

/**
 * Implements hook_block_configure().
 */
function atom_donate_block_configure($delta = '') {
  if ($delta === 'atom_donate') {
    $form = array();

    $form['atom_donate_text'] = array(
      '#type' => 'textfield',
      '#default_value' => 'Donate now',
    );

    $form['atom_donate_path'] = array(
      '#type' => 'textfield',
      '#default_value' => 'donate/',
    );

    return $form;
  }
}

/**
 * Implements hook_block_save().
 */
function atom_donate_block_save($delta = '', $edit = array()) {
  if ($delta === 'atom_donate') {
    if (isset($edit['atom_donate_text'])) {
      variable_set('atom_donate_text', $edit['atom_donate_text']);
      variable_set('atom_donate_path', $edit['atom_donate_path']);
    }
  }
}

/**
 * Creates the donate page.
 *
 * This will create a page node with a path of "/donate" if:
 *
 * - something doesn't already exist at /donate
 * - and the page content type exists
 *
 * @return mixed
 *   Return's the node object if successful or NULL if not.
 */
function atom_donate_create_donate_page() {
  if (drupal_lookup_path('source', 'donate') === FALSE) {
    $info = entity_get_info('node');
    if (isset($info['bundles']['page'])) {
      // create the node
      $page = new stdClass();
      $page->type = 'page';
      $page->title = 'Donate';
      $language = LANGUAGE_NONE;
      $page->language = $language;
      $page->path = array(
        'alias' => 'donate',
        'pathauto' => FALSE,
      );
      node_object_prepare($page);
      $page->uid = 1;
      $page->body[$language][0]['value'] = "Enter your donation page's text here.";
      $page->body[$language][0]['format'] = filter_default_format();
      $page = node_submit($page);
      node_save($page);
      return $page;
    }

    watchdog('atom_donate', 'Donate page was not created because the page content type does not exist', array(), WATCHDOG_ERROR);
    return NULL;
  }

  watchdog('atom_donate', 'Donate page was not created because something already exists at /donate', array(), WATCHDOG_NOTICE);
  return NULL;
}
